version: 0.2
run-as: root

phases:

  install:
    commands:
       - echo Installing app dependencie s...
       - curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/kubectl
       - chmod +x ./kubectl
       - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
       - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      #  - source ~/.bashrc
       - echo 'Check kubectl version'
       - kubectl version --short --client
       - chmod +x prereqs.sh
       - echo "entering prereqs.sh file"
       - sh prereqs.sh
   

  pre_build:
    commands:
      - echo Logging in to Amazon EKS...
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name test001
      - echo check config 
      - kubectl config view --minify
      - echo check kubectl access
      - kubectl get svc
      - echo Logging in to Amazon ECR...#ecr for docker images
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/i8e5t7q7
      
  build:
    commands:
      - echo Building the Docker image...     
      - docker ps  
      #we will build 3 image here    
      - docker build -t public.ecr.aws/i8e5t7q7/multi-server:latest -t public.ecr.aws/i8e5t7q7/multi-server:1 -f ./server/Dockerfile ./server
      - docker build -t public.ecr.aws/i8e5t7q7/multi-client:latest -t public.ecr.aws/i8e5t7q7/multi-client:1 -f ./client/Dockerfile ./client
      - docker build -t public.ecr.aws/i8e5t7q7/multi-worker:latest -t public.ecr.aws/i8e5t7q7/multi-worker:1 -f ./worker/Dockerfile ./worker
      # - docker build -t $IMAGE_REPO_CLIENT:latest -t $IMAGE_REPO_CLIENT:1 -f ./client/Dockerfile ./client
      # - docker build -t $IMAGE_REPO_WORKER:latest -t $IMAGE_REPO_WORKER:1 -f ./worker/Dockerfile ./worker
      
      

  post_build:
    commands:
      - echo Pushing the Docker image...
      
      - docker push public.ecr.aws/i8e5t7q7/multi-server:latest
      - docker push public.ecr.aws/i8e5t7q7/multi-client:latest
      - docker push public.ecr.aws/i8e5t7q7/multi-worker:latest
  
      # - docker push $IMAGE_REPO_CLIENT:latest


      - docker push public.ecr.aws/i8e5t7q7/multi-server:1
      - docker push public.ecr.aws/i8e5t7q7/multi-client:1
      - docker push public.ecr.aws/i8e5t7q7/multi-worker:1
      - echo all images pushed successfully!
       
      - kubectl apply -f ./k8s
      - kubectl rollout restart -f ./k8s/client-deployment.yaml
      - kubectl rollout restart -f ./k8s/server-deployment.yaml
      - kubectl rollout restart -f ./k8s/worker-deployment.yaml

      - echo hope it works out!